# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the release-4.1d branch
  push:
    branches: [ release-4.1d ]
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v1
    - uses: ilammy/msvc-dev-cmd@v1
    - uses: gleam-lang/setup-erlang@v1.1.0
      id: install_erlang
      with:
        otp-version: 22.3
    - name: build
      run: |
        #     set-executionpolicy remotesigned -s cu
        #     iex (new-object net.webclient).downloadstring('https://get.scoop.sh')
        #     # $env:path + ";" + $env:USERPROFILE + "\scoop\shims" + ';C:\Program Files\erl10.4\bin'
        #     [environment]::SetEnvironmentvariable("Path", ";" + $env:USERPROFILE + "\scoop\shims")
        #     [environment]::SetEnvironmentvariable("Path", ';C:\Program Files\erl10.4\bin')
        #     scoop bucket add extras https://github.com/lukesampson/scoop-extras.git
        #     scoop update
        #     scoop install sudo curl vcredist2013

        $env:PATH = "${{ steps.install_erlang.outputs.erlpath }}\bin;$env:PATH"

        $version = $( "${{ github.ref }}" -replace "^(.*)/(.*)/" )
        if ($version -match "^v[0-9]+\.[0-9]+(\.[0-9]+)?") {
          $env:EMQX_DEPS_DEFAULT_VSN = $version
          $regex = "[0-9]+\.[0-9]+(-alpha|-beta|-rc)?\.[0-9]"
          $pkg_name = "emqx-windows-$([regex]::matches($version, $regex).value).zip"
          }
        else {
          $env:EMQX_DEPS_DEFAULT_VSN = ""
          $pkg_name = "emqx-windows-$($version -replace '/').zip"
          }

        make deps-emqx
        $rebar3 = $env:USERPROFILE + "\rebar3"
        (New-Object System.Net.WebClient).DownloadFile('https://s3.amazonaws.com/rebar3/rebar3', $rebar3)
        cd _build/emqx/lib/jiffy/
        escript $rebar3 compile
        cd ../../../../

        make emqx
        mkdir -p _packages/emqx
        Compress-Archive -Path _build/emqx/rel/emqx -DestinationPath _build/emqx/rel/$pkg_name
        mv _build/emqx/rel/$pkg_name _packages/emqx
        Get-FileHash -Path "_packages/emqx/$pkg_name" | Format-List | grep 'Hash' | awk '{print $3}'  > _packages/emqx/$pkg_name.sha256
    - name: run emqx
      run: |
        ./_build/emqx/rel/emqx/bin/emqx start
        ./_build/emqx/rel/emqx/bin/emqx stop
        ./_build/emqx/rel/emqx/bin/emqx install
        ./_build/emqx/rel/emqx/bin/emqx uninstall
    - uses: actions/upload-artifact@v1
      with:
        name: emqx
        path: ./_packages/emqx/.

  # This workflow contains a single job called "build"
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: 
        - centos7


    steps:
    - name: prepare docker
      run: |
        mkdir -p $HOME/.docker
        echo '{ "experimental": "enabled" }' | tee $HOME/.docker/config.json
        echo '{ "experimental": true, "storage-driver": "overlay2", "max-concurrent-downloads": 50, "max-concurrent-uploads": 50}' | sudo tee /etc/docker/daemon.json
        sudo systemctl restart docker
        docker info
        docker buildx create --use --name mybuild
        docker run --rm --privileged tonistiigi/binfmt --install all
    - uses: actions/checkout@v1
    - name: get deps
      run: |
        docker run -i --rm \
            -e GITHUB_RUN_ID=$GITHUB_RUN_ID \
            -e GITHUB_REF=$GITHUB_REF \
            -v $(pwd):/emqx-rel \
            -w /emqx-rel \
            emqx/build-env:erl22.3-debian10 \
            bash -c "make deps-all"
    - name: downloads emqx zip packages
      env:
        SYSTEM: ${{ matrix.os }}
      run: |
        set -e -u -x
        version=$(echo ${{ github.ref }} | sed -r  "s ^refs/heads/|^refs/tags/(.*) \1 g")
        if [ "$(echo $version | grep -oE "^[ev0-9]+\.[0-9]+\.[1-9]+?")" = "$version" ]; then
           tags=$(git tag -l "$(echo $version | grep -oE "^[ev0-9]+\.[0-9]").*" |grep -v "$version")
           for tag in ${tags[@]};do
             for arch in x86_64 aarch64; do
                mkdir -p tmp/relup_packages/emqx
                cd tmp/relup_packages/emqx
                if [ ! -z "$(echo  $(curl -I -m 10 -o /dev/null -s -w %{http_code} https://packages.emqx.io/emqx-ce/v${tag#[e|v]}/emqx-$SYSTEM-${tag#[e|v]}-$arch.zip) | grep -oE "^[23]+")" ];then
                  wget https://www.emqx.io/downloads/broker/v${tag#[e|v]}/emqx-$SYSTEM-${tag#[e|v]}-$arch.zip
                  wget https://www.emqx.io/downloads/broker/v${tag#[e|v]}/emqx-$SYSTEM-${tag#[e|v]}-$arch.zip.sha256
                  echo "$(cat emqx-$SYSTEM-${tag#[e|v]}-$arch.zip.sha256) emqx-$SYSTEM-${tag#[e|v]}-$arch.zip" | sha256sum -c || exit 1
                fi
                cd -

                mkdir -p tmp/relup_packages/emqx-edge
                cd tmp/relup_packages/emqx-edge
                if [ ! -z "$(echo  $(curl -I -m 10 -o /dev/null -s -w %{http_code} https://packages.emqx.io/emqx-edge/v${tag#[e|v]}/emqx-edge-$SYSTEM-${tag#[e|v]}-$arch.zip) | grep -oE "^[23]+")" ];then
                  wget https://www.emqx.io/downloads/edge/v${tag#[e|v]}/emqx-edge-$SYSTEM-${tag#[e|v]}-$arch.zip
                  wget https://www.emqx.io/downloads/edge/v${tag#[e|v]}/emqx-edge-$SYSTEM-${tag#[e|v]}-$arch.zip.sha256
                  echo "$(cat emqx-edge-$SYSTEM-${tag#[e|v]}-$arch.zip.sha256) emqx-edge-$SYSTEM-${tag#[e|v]}-$arch.zip" | sha256sum -c || exit 1
                fi
                cd -
             done
           done
        fi
    - name: build emqx packages on amd64
      env: 
        ERL_OTP: erl22.3
        SYSTEM: ${{ matrix.os }}
      if: matrix.os != 'raspbian9' && matrix.os != 'raspbian10'
      run: |
        set -e -u -x
        for EMQX in emqx emqx-edge; do
          docker buildx build --no-cache \
            --platform=linux/amd64 \
            -t cross_build_emqx_for_$SYSTEM \
            -f .ci/build_packages/Dockerfile \
            --build-arg BUILD_FROM=emqx/build-env:$ERL_OTP-$SYSTEM \
            --build-arg EMQX_NAME=${EMQX} \
            --output type=tar,dest=/tmp/cross-build-$EMQX-for-$SYSTEM.tar .

          mkdir -p /tmp/packages/$EMQX
          tar -xvf /tmp/cross-build-$EMQX-for-$SYSTEM.tar --wildcards emqx-rel/_packages/$EMQX/*
          mv emqx-rel/_packages/$EMQX/* /tmp/packages/$EMQX/
          rm -rf /tmp/cross-build-$EMQX-for-$SYSTEM.tar

          docker rm -f $(docker ps -a -q)
          docker volume prune -f
        done
    - name: build emqx packages on arm64
      if: matrix.os != 'centos6'
      env:
        ERL_OTP: erl22.3
        SYSTEM: ${{ matrix.os }}
      run: |
        set -e -u -x
        for EMQX in emqx emqx-edge; do
          if [ "$EMQX" == "emqx" ] && [ ! -z $( echo $SYSTEM | grep -o raspbian) ];then
            continue
          fi

          docker buildx build --no-cache \
            --platform=linux/arm64 \
            -t cross_build_emqx_for_$SYSTEM \
            -f .ci/build_packages/Dockerfile \
            --build-arg BUILD_FROM=emqx/build-env:$ERL_OTP-$SYSTEM \
            --build-arg EMQX_NAME=${EMQX} \
            --output type=tar,dest=/tmp/cross-build-$EMQX-for-$SYSTEM.tar . || df -h

          mkdir -p /tmp/packages/$EMQX
          tar -xvf /tmp/cross-build-$EMQX-for-$SYSTEM.tar --wildcards emqx-rel/_packages/$EMQX/*
          mv emqx-rel/_packages/$EMQX/* /tmp/packages/$EMQX/
          rm -rf /tmp/cross-build-$EMQX-for-$SYSTEM.tar

          docker rm -f $(docker ps -a -q)
          docker volume prune -f
        done
    - name: create sha256
      run: |
        if [ -d /tmp/packages/emqx ]; then
          cd /tmp/packages/emqx
            for var in $(ls emqx-* ); do
              bash -c "echo $(sha256sum $var | awk '{print $1}') > $var.sha256"
            done
          cd -
        fi
        if [ -d /tmp/packages/emqx-edge ]; then
          cd /tmp/packages/emqx-edge
            for var in $(ls emqx-edge-* ); do
              bash -c "echo $(sha256sum $var | awk '{print $1}') > $var.sha256"
            done
          cd -
        fi
    - uses: actions/upload-artifact@v1
      if: matrix.os != 'raspbian9' && matrix.os != 'raspbian10'
      with:
        name: emqx
        path: /tmp/packages/emqx/.
    - uses: actions/upload-artifact@v1
      with:
        name: emqx-edge
        path: /tmp/packages/emqx-edge/.
